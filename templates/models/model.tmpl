package model

import (
    {{- range .Imports}}
    "{{.}}"
    {{- end}}
)

type {{.Name}} struct {
    {{- range .Fields}}
    {{.Name}} {{.Type}}
    {{- end}}
    {{- range .BelongsToRelations}}
    {{.FieldName}} *{{.ModelName}}
    {{- end}}
    {{- range .HasManyRelations}}
    {{.FieldName}} []*{{.ModelName}}
    {{- end}}
}

{{- range .Enums}}
type {{.Name}} string

const (
    {{- $enumName := .Name}}
    {{- range $index, $value := .Values}}
    {{$enumName}}{{toCamel $value}} {{$enumName}} = "{{$value}}"
    {{- end}}
)

func Valid{{.Name}}(v string) bool {
    switch {{.Name}}(v) {
    {{- range .Values}}
    case {{$enumName}}{{toCamel .}}:
        return true
    {{- end}}
    }
    return false
}

func (e {{.Name}}) String() string {
    return string(e)
}
{{- end}}

func ({{.Name}}) TableName() string {
    return "{{.Name | toSnake | pluralize}}"
}
