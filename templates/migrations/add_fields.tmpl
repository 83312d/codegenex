-- +goose Up
-- +goose StatementBegin

{{- range .Enums}}
DO $$
BEGIN
    IF NOT EXISTS (SELECT 1 FROM pg_type WHERE typname = '{{.Name}}') THEN
        CREATE TYPE {{.Name}} AS ENUM (
            {{- range $index, $value := .Values}}
            {{- if $index}},{{end}}
            '{{$value}}'
            {{- end}}
        );
    END IF;
END$$;
{{- end}}

{{- range .Fields}}
{{- if .IsReference}}
ALTER TABLE {{$.TableName}}
ADD COLUMN IF NOT EXISTS {{.Name}} {{.SQLType}}{{if .IsNullable}} NULL{{else}} NOT NULL{{end}};

DO $$
BEGIN
    IF NOT EXISTS (
        SELECT 1 FROM information_schema.table_constraints 
        WHERE constraint_name = 'fk_{{$.TableName}}_{{.Name}}' 
        AND table_name = '{{$.TableName}}'
    ) THEN
        ALTER TABLE {{$.TableName}}
        ADD CONSTRAINT fk_{{$.TableName}}_{{.Name}}
        FOREIGN KEY ({{.Name}}) REFERENCES {{.RefTable}}({{.RefColumn}})
        ON DELETE {{.OnDelete}};
    END IF;
END $$;
{{- else}}
ALTER TABLE {{$.TableName}}
ADD COLUMN IF NOT EXISTS {{.Name}} {{if .IsEnum}}{{.EnumName}}{{else}}{{.SQLType}}{{end}}{{if .IsNullable}} NULL{{else}} NOT NULL{{end}}{{if .IsUnique}} UNIQUE{{end}}{{if .DefaultValue}} DEFAULT {{.DefaultValue}}{{end}};
{{- end}}
{{- end}}

{{- range .Indexes}}
CREATE INDEX IF NOT EXISTS {{.Name}} ON {{$.TableName}} ({{range $i, $c := .Columns}}{{if $i}}, {{end}}{{$c}}{{end}});
{{- end}}

-- +goose StatementEnd

-- +goose Down
-- +goose StatementBegin
{{- range .Fields}}
{{- if .IsReference}}
ALTER TABLE {{$.TableName}} DROP CONSTRAINT IF EXISTS fk_{{$.TableName}}_{{.Name}};
{{- end}}
ALTER TABLE {{$.TableName}} DROP COLUMN IF EXISTS {{.Name}};
{{- end}}

{{- range .Indexes}}
DROP INDEX IF EXISTS {{.Name}};
{{- end}}

{{- range .Enums}}
DROP TYPE IF EXISTS {{.Name}};
{{- end}}
-- +goose StatementEnd

